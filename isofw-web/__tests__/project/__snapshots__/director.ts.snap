// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` direct a test   can increase number :  info pushed by Server  1`] = `
<div
  className="flex1 column"
>
  <div
    className="flex center"
  >
    <div
      className="titleBox"
    />
  </div>
  <div
    className="flex center"
  >
    <div
      className="currentBox"
    >
      <span
        className="shotNumber"
      />
      <br />
      <span>
        CA 
        <span>
          
        </span>
      </span>
    </div>
  </div>
  <div
    className="flex center"
  >
    <div
      className="Button"
    >
      {
  "text": "previous shot",
  "large": true,
  "iconFa": "step-backward"
}
    </div>
    <div
      className="Button"
    >
      {
  "text": "next shot",
  "large": true,
  "iconFa": "step-forward",
  "fill": true
}
    </div>
    <div
      className="Button"
    >
      {
  "large": true,
  "iconFa": "sync",
  "text": "placeholder"
}
    </div>
  </div>
  <div
    className="BlockTitle"
  >
    {
  "className": "centerText"
}
    Automatically controlled cameras
  </div>
  <div
    className="flex row center"
  />
</div>
`;

exports[` direct a test   can increase number :  project Edited by client 1`] = `
Object {
  "createState": Object {},
  "currentlyEditing": "b19999999999999999999999",
  "fetching": Object {
    "undefined": false,
  },
  "getFromServer": [Function],
  "getState": Object {
    "cameras": Object {},
    "projects": Object {
      "b19999999999999999999999": Object {
        "_id": "b19999999999999999999999",
        "isActive": true,
        "name": "pn1",
        "shot": 43,
      },
    },
    "users": Object {
      "u1": Object {
        "_id": "u1",
        "email": "u1",
      },
    },
  },
  "lastFetch": Object {
    "b19999999999999999999999": -2077750800000,
    "undefined": -2077750800000,
  },
  "removeState": Object {},
  "updateState": Object {
    "edit.projectModelb19999999999999999999999": Object {
      "_id": "b19999999999999999999999",
      "isActive": true,
      "name": "pn1",
      "shot": 43,
    },
    "edit.undefinedb19999999999999999999999": null,
  },
}
`;

exports[` direct a test   can increase number :  project pushed by server  1`] = `
Object {
  "createState": Object {},
  "currentlyEditing": "",
  "fetching": Object {},
  "getFromServer": [Function],
  "getState": Object {
    "projects": Object {
      "b19999999999999999999999": Object {
        "_id": "b19999999999999999999999",
        "isActive": true,
        "name": "pn1",
        "shot": 42,
      },
    },
    "users": Object {
      "u1": Object {
        "_id": "u1",
        "email": "u1",
      },
    },
  },
  "lastFetch": Object {
    "b19999999999999999999999": -2077750800000,
  },
  "removeState": Object {},
  "updateState": Object {},
}
`;

exports[` direct a test   can increase number : After manual edits 1`] = `
<div
  className="flex1 column"
>
  <div
    className="flex center"
  >
    <div
      className="titleBox"
    >
      pn1
    </div>
  </div>
  <div
    className="flex center"
  >
    <div
      className="currentBox"
    >
      <span
        className="shotNumber"
      >
        43
      </span>
      <br />
      <span>
        CA 
        <span>
          
        </span>
      </span>
    </div>
  </div>
  <div
    className="flex center"
  >
    <div
      className="Button"
    >
      {
  "text": "previous shot",
  "large": true,
  "iconFa": "step-backward",
  "loading": false,
  "disabled": false
}
    </div>
    <div
      className="Button"
    >
      {
  "text": "next shot",
  "large": true,
  "iconFa": "step-forward",
  "fill": true,
  "loading": false,
  "disabled": false
}
    </div>
    <div
      className="Button"
    >
      {
  "large": true,
  "iconFa": "sync",
  "text": "placeholder",
  "loading": false,
  "disabled": false
}
    </div>
  </div>
  <div
    className="BlockTitle"
  >
    {
  "className": "centerText"
}
    Automatically controlled cameras
  </div>
  <div
    className="flex row center"
  />
</div>
`;

exports[` direct a test   can increase number : Before manual edits 1`] = `
<div
  className="flex1 column"
>
  <div
    className="flex center"
  >
    <div
      className="titleBox"
    />
  </div>
  <div
    className="flex center"
  >
    <div
      className="currentBox"
    >
      <span
        className="shotNumber"
      />
      <br />
      <span>
        CA 
        <span>
          
        </span>
      </span>
    </div>
  </div>
  <div
    className="flex center"
  >
    <div
      className="Button"
    >
      {
  "text": "previous shot",
  "large": true,
  "iconFa": "step-backward"
}
    </div>
    <div
      className="Button"
    >
      {
  "text": "next shot",
  "large": true,
  "iconFa": "step-forward",
  "fill": true
}
    </div>
    <div
      className="Button"
    >
      {
  "large": true,
  "iconFa": "sync",
  "text": "placeholder"
}
    </div>
  </div>
  <div
    className="BlockTitle"
  >
    {
  "className": "centerText"
}
    Automatically controlled cameras
  </div>
  <div
    className="flex row center"
  />
</div>
`;
